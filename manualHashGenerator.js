// manualHashGenerator.js
const path = require('path');
const fs = require('fs');
const crypto = require('crypto');
const yaml = require('yaml'); // You'll need to install this: npm install yaml

// =========== Configuration ===========
// Path to your signed executable file
const SIGNED_EXE_PATH = './dist/boly-Setup-1.0.4.exe'; // e.g., './dist/boly-Setup-1.0.4.exe'

// Path to latest.yml file generated by electron-builder
const YML_FILE_PATH = './dist/latest.yml'; // e.g., './dist/latest.yml'

// =========== Hash Generator ===========
function hashFile(file, algorithm = 'sha512', encoding = 'base64', options) {
  return new Promise((resolve, reject) => {
    const hash = crypto.createHash(algorithm);
    hash.on('error', reject).setEncoding(encoding);
    
    console.log(`Calculating ${algorithm} hash for: ${file}`);
    
    fs.createReadStream(
      file,
      Object.assign({}, options, {
        highWaterMark: 1024 * 1024, // Use more memory for faster hashing
      })
    )
      .on('error', reject)
      .on('end', () => {
        hash.end();
        const result = hash.read();
        console.log(`Hash completed: ${result.substring(0, 20)}...`);
        resolve(result);
      })
      .pipe(
        hash,
        {
          end: false,
        }
      );
  });
}

// =========== Main Function ===========
async function updateYmlWithCorrectHash() {
  try {
    // Check if paths are configured
    if (!SIGNED_EXE_PATH || !YML_FILE_PATH) {
      console.error('Error: You must configure SIGNED_EXE_PATH and YML_FILE_PATH');
      return;
    }

    // Calculate hash of the signed executable
    const exePath = path.resolve(__dirname, SIGNED_EXE_PATH);
    const hash = await hashFile(exePath);
    console.log('\nFull hash:', hash);
    
    // Read the latest.yml file
    const ymlPath = path.resolve(__dirname, YML_FILE_PATH);
    const ymlContent = fs.readFileSync(ymlPath, 'utf8');
    
    // Parse and update the yaml content
    const parsedYml = yaml.parse(ymlContent);
    
    // Store the old hash for reference
    const oldHash = parsedYml.files[0].sha512;
    console.log('\nOld hash in yml:', oldHash.substring(0, 20) + '...');
    
    // Update the hash in the yaml
    parsedYml.files[0].sha512 = hash;
    console.log('Updated hash in yml:', hash.substring(0, 20) + '...');
    
    // Convert back to yaml format
    const updatedYml = yaml.stringify(parsedYml);
    
    // Write the updated content back to the yml file
    fs.writeFileSync(ymlPath, updatedYml, 'utf8');
    console.log(`\nSuccess! Updated hash in ${YML_FILE_PATH}`);
    
  } catch (error) {
    console.error('Error:', error);
  }
}

// Run the main function
updateYmlWithCorrectHash();